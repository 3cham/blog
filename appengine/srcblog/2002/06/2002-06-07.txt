Date: 2002-06-07 12:11:47
Format: wphtml
Title: Groove is not going to last

<A href="http://www.groove.net">Groove</A> is a shell for building distributed, p2p applications. It's a concept similar to a browser (a shell for server centric, html-based applications) and Emacs (a shell for applications that can be build with "everything is a text" metaphor, which, surprisingly, is a lot). The problem with this approach is that it has state-of-the art p2p capabilities but second rate applications build on top of that. Today Groove is a great and innovative platform but it's a dancing bear (using Alan Cooper's analogy) and an evolutionary dead-end. The problem with this apprach is that it tries to replace operating system with its own, limited set of capabilities and that's just not possible. It has a chance of being quite succesfull, just as Emacs and web browsers are succesfull). Notice that both emacs and web browsers became succesfull because they provide interesting capabilities not present in an operating system but they did not replace os. Web browser were sucked into operating system and just became another feature in it while Emacs remains a world unto itself that interfaces with other applications via OS (mostly file system). In the same way Groove will become marginalized when p2p capabilities will get integrated into OS and someone will write state-of-the-art apps that blow away mediocre apps provided by Groove. That is a challange for Groove that I don't think they'll overcome. They have a few years lead but Groove isn't really about the apps they provide but about the concept of p2p, distributed collaboration. That's what is attractive about it. It adds is a concept of a workspace shared by many people connected via Internet and means of synchronizing and multi-user updating of the documents (be it a text document, an outline, a calendar, a document describing project deadlines etc.). Groove locks every app inside its one big window but it's not necessary nor desirable. P2P framework can, and will be, integrated in the OS and at that moment people will start writing state-of-the-art apps that use this framework and that will be the end of Groove. They cannot provide the best possible app in every category because they don't have the man-power to do it and, most importantly, they limit themselves with their one-big-window apprach (just like browsers are limited to (mostly) displaying HTML and Emacs is limited to displaying characters).<BR>The interesting thing here is that it opens a door for independent developers to build state-of-the-art apps that allow p2p collaborations. One doesn't need to wait for the OS to provide p2p framework, it can be down today with a little bit of effort (and in the future replaced by the one that comes with the OS).