Date: 2008-04-07 07:28:39
Format: wphtml
Title: gflags - a debugging story

I hate crashes that disappear when run under the debugger and I had one when porting mupdf to Windows.<br id="lj2z" /><br id="eqfw" />It helps to know that there's at least one reason for a changed behavior under the debugger: it automatically triggers using debugging heap. While debugging heap usually helps find problems, sometimes it does the opposite by changing the details of memory allocation.<br id="cjx8" /><br id="fkk4" />One helpful tool when debugging memory problems on Windows is gflags which can enable page heap instrumentation for a given program. It works by putting each allocation into a separate region of memory and putting a non-readable page right after that. Also, upon freeing it makes the memory unreadable. That way an overwrite of memory block while it's still being used or accessing the memory after it was freed will cause immediate crash.<br id="wka5" /><br id="nc7s" />The downside is that using gflags uses much more memory. But in those days of cheap gigabytes it's not a problem that can't be solved with a couple hundred bucks.<br id="vuor" /><br id="gw6q" />Basic usage of gflags.exe is simple: <span id="vqy7" style="font-family: Courier New">gflags /p /full /enable foo.exe</span><br id="lkez" /><br id="qvip" />From now on foo.exe will always be run with this instrumentation turned on. To disable, do <span id="b.ko" style="font-family: Courier New">gflags /p /disable foo.exe</span><br id="rzr6" /><br id="t4m2" />To see which programs have page heap enabled, do <span id="vy5h" style="font-family: Courier New">gflags /p</span>. gflags offers many other option and you can learn about them via <code>gflags /?</code>. If you run gflags without any options, you'll get a (very confusing) GUI.<br id="p1lr" /><br id="ek2l" />It worked like a charm. I got a crash on accessing freed memory and all I had to do was to backtrack to where this memory was allocated to figure out the problem.<br id="e4bn" /><br id="sn9l" />