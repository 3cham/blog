Date: 2003-05-27 02:56:43
Format: wphtml
Title: Creating software, paying for software.

<b>Creating software, paying for software.</b>

Aaron argues <a href="http://www.aaronsw.com/weblog/000933">that you shouldn't pay for software</a>. I don't agree with his post in general and with some points in particular. For example, he says that <i>producing software only costs a bunch of time, once</i>. That, amusingly, ignores the underlying reality of how software is made. Any software that is worth using, open or close-source, any word processor, operating system, spreadsheet, web browser or web server is a multi-year effor of, literally, tens or hundreds of people. You can't just ship software and go home. Software either evolves or dies a quick death. <a href="http://www.joelonsoftware.com/articles/fog0000000017.html">Good software takes ten years</a>. The point is: if you have to pay market price for programmer's time, it's a multi-million investement. If you can get people to write software without paying them, it doesn't mean it costs less, it means that someone else paid for that. It's just <a href="http://markbernstein.org/May0301.html#note_34865">an accounting trick</a>.
<p>
But Aaron's point isn't really about that and even with that correction in mind he would still have an issue with the system because he thinks that the reward for writing succesful software is too big than the cost of writing it. It's a safe bet that Oracle paid only a (small) fraction of their database revenues over the years for programmer's salaries. If we, as a society, could just reimburse the programmers for their time and give Oracle away for free, we would have it much cheaper. Or would we? The problem is that for one clear winner in the database category, there were tens of companies that failed (Sybase, for example, is marginal at this point, IBM's hierarchical database are a thing of the past, object-oriented databases that were so hyped just a few years ago, are just a blip in the market etc.). The market isn't rewarding Oracle for how hard its programmers worked over the years (Sybase programmers worked just as much) but for the fact that Oracle took the risk, bet on the right horse, had the right vision and succeeded in executing their vision much better, on average, than their competition. It might seem like a stupid and inefficient system to some but it's called capitalism and all known alternatives are much worse.
<p>
Also Aaron tries to pitch open-source as a different system than closed-source, commercial developement but that isn't so. Open-source and closed-source compete within the rules of the same system (capitalism). Currently closed-source has a clear edge (unless <a href="http://slashdot.org/">you're in denial</a>). Maybe some time in the future one will be a clear winner or they'll coexist but we better hope that the decision will be made by the free market. And BTW: "don't pay" is not in software developers self-interest and one shouldn't underestimate our power <a href="http://scriptingnews.userland.com/2003/05/26#whoWillPayPart2">to not write the software</a>.
<p>
So the discussion as to "should you pay for software or not" is pointless because it's impossible to tell how a system with different rules will perform. Will we get more, cheaper and better software if it's all open-source or if it's all closed-source? Or maybe banning software and hardware altogether and going back to 19th century technology will make us all much happier? I don't know and neither do you. All we have are our half-baked ideas that always omit 99% of the complexity of the system that we pretend to know how to improve. In the end, the question will be answered by the market in due time - we just have to wait. In the meantime, don't forget that you're part of the system and you have the power to change the answer. Put your time where your mouth is and compete. Write open-source, write closed-source and let the better man win.